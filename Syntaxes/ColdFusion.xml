<?xml version="1.0"?>
<syntax name="sourcecode.cfm">
    <zones>
        <!-- CFML Output Block; <cfoutput>...</cfoutput> -->
        <zone name="meta.tag.cfoutput.cfm">
            <starts-with>
                <expression>(?:^\s+)?&lt;((?i:cfoutput))\b(?![^>]*/>)</expression>
                <capture number="1" name="entity.name.tag.cfoutput.cfm"/>
            </starts-with>
            <ends-with>
                <expression>&lt;/((?i:cfoutput))>(?:\s*\n)?</expression>
                <capture number="1" name="entity.name.tag.cfoutput.cfm"/>
            </ends-with>
            <subzones>
                <include collection="tag-stuff"/>
                <zone name="source.cfml.embedded">
                    <starts-with>
                        <expression>></expression>
                    </starts-with>
                    <ends-with>
                        <expression>(?=&lt;/(?i:cfoutput))</expression>
                    </ends-with>
                    <subzones name="meta.scope.output.cfm">
                        <include syntax="$self"/>
                    </subzones>
                </zone>
            </subzones>
        </zone>
        
        <!-- CFML Query Block; <cfquery>...</cfquery> -->
        <zone name="meta.tag.cfquery.cfm">
            <starts-with>
                <expression>(?:^\s+)?&lt;((?i:cfquery))\b(?![^>]*/>)</expression>
                <capture number="1" name="entity.name.tag.cfquery.cfm"/>
            </starts-with>
            <ends-with>
                <expression>&lt;/((?i:cfquery))>(?:\s*\n)?</expression>
                <capture number="1" name="entity.name.tag.cfquery.cfm"/>
            </ends-with>
            <subzones>
            	<include collection="tag-stuff"/>
                <zone name="source.sql.embedded">
                    <starts-with>
                        <expression>(?&lt;=>)</expression>
                    </starts-with>
                    <ends-with>
                        <expression>(?=&lt;/(?i:cfquery))</expression>
                    </ends-with>
                    <subzones>
                        <include syntax="sourcecode.sql"/>                      
                    </subzones>
                </zone>
            </subzones>
        </zone>

		<zone name="meta.tag.self-closing.cfm">
			<starts-with>
				<expression>(&lt;)((?i:cf)(abort|else|set|argument|directory|file|return|input|queryparam))</expression>
				<capture number="1" name="punctuation.definition.begin"/>
				<capture number="2" name="entity.name.tag.cfm"/>
			</starts-with>
			<ends-with>
				<expression>(/?)(>)</expression>
				<capture number="1" name="punctuation.definition.end.self-closing"/>
				<capture number="2" name="punctuation.definition.end"/>
			</ends-with>
			<subzones>
				<include collection="tag-stuff"/>
			</subzones>
		</zone>
        
        <zone name="meta.tag.open.other.cfm">
            <starts-with>
                <!--<expression>(&lt;)((?i:cf)([a-zA-Z0-9]+))(?=[^>]*>)</expression>-->
                <expression>(&lt;)((?i:cf)([a-zA-Z0-9]+))</expression>
                <capture number="1" name="punctuation.definition.begin"/>
                <capture number="2" name="entity.name.tag.cfm"/>
            </starts-with>
            <ends-with>
                <expression>(/?)(>)</expression>
				<capture number="1" name="punctuation.definition.end.self-closing"/>
				<capture number="2" name="punctuation.definition.end"/>
            </ends-with>
            <subzones>
                <include collection="tag-stuff"/>
            </subzones>
        </zone>
        
        <zone name="meta.tag.close.other.cfm">
            <starts-with>
                <expression>(&lt;/)((?i:cf)([a-zA-Z0-9]+))(?=[^>]*>)</expression>
                <capture number="1" name="punctuation.definition.begin"/>
                <capture number="2" name="entity.name.tag.cfm"/>
            </starts-with>
            <ends-with>
                <expression>(>)</expression>
				<capture number="2" name="punctuation.definition.end"/>
            </ends-with>
            <subzones>
                <include collection="tag-stuff"/>
            </subzones>
        </zone>
        
        <!-- zone name="meta.tag.any.cfm">
            <starts-with>
                <expression>(&lt;)/?((?i:cf)([a-zA-Z0-9]+))(?=[^>]*>)</expression>
                <capture number="1" name="punctuation.definition.begin"/>
                <capture number="2" name="entity.name.tag.cfm"/>
            </starts-with>
            <ends-with>
                <expression>(/?)(>)</expression>
				<capture number="1" name="punctuation.definition.end.self-closing"/>
				<capture number="2" name="punctuation.definition.end"/>
            </ends-with>
            <subzones>
                <include collection="tag-stuff"/>
            </subzones>
        </zone -->
        
        <include collection="coldfusion-comment"/>
        <include collection="coldfusion-script" />
        <include collection="coldfusion-functions" />
        <!--This enables HTML support -->
        <include syntax="text.html.basic"/> 
        
        
    </zones>
    
    <library>    
        <collection name="coldfusion-comment">
            <zone name="comment.block.cfm">
                <starts-with>
                    <expression>&lt;!---</expression>
                </starts-with>
                <ends-with>
                    <expression>---></expression>
                </ends-with>
                <subzones>
                    <include collection="coldfusion-comment"/>
                </subzones>
            </zone>
        </collection>
        
        <collection name="embedded-code"/>
        
        <!-- Keywords -->
        <collection name="literal-keyword">
            <zone name="literal.keyword.bool.true">
            	<expression>\btrue\b</expression>
            </zone>
            <zone name="literal.keyword.bool.false">
            	<expression>\bfalse\b</expression>
            </zone>
            <zone name="literal.keyword.local.var">
            	<expression>\bvar\b</expression>
            </zone>
        </collection>
        
        <!-- Arithmetic Operators -->
        <collection name="coldfusion-operators">
            <zone name="arithmetic.operator">
            	<expression>\+|\-|\*|/|\+\+|\-\-|\+=|\-=|\*=|/=|MOD|%=|% |\\|\^\b</expression>
            </zone>
            <zone name="logical.operator">
            	<!-- Missing the ||, && and ! operator -->
				<expression>\b(NOT|AND|OR|XOR|EQV|IMP)\b</expression>
            </zone>
            <zone name="decision.operator">
				<expression>\b(IS|EQUAL|EQ|IS NOT|NOT EQUAL|NEQ|CONTAINS|DOES NOT CONTAIN|GREATER THAN|GT|LESS THAN|LT|GREATER THAN OR EQUAL TO|GTE|GE|LESS THAN OR EQUAL TO|LTE|LE)\b</expression>
            </zone>
            <!-- Missing string operators (because they are & and &= -->
        </collection> 
        
        <collection name="entities">
            <zone name="constant.character.entity.html">
                <expression>&amp;([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);</expression>
            </zone>
            <zone name="invalid.illegal.bad-ampersand.html">
                <expression>&amp;</expression>
            </zone>
        </collection>
        
        <!-- Strings double quoted -->
        <collection name="string-double-quoted">
            <zone name="string.quoted.double.cfm">
                <starts-with>
                    <expression>"</expression>
                </starts-with>
                <ends-with>
                    <expression>"</expression>
                </ends-with>
                <subzones>
                    <include collection="embedded-code"/>
                    <include collection="entities"/>
                </subzones>
            </zone>
        </collection>
        
        <!-- Strings single quoted -->
        <collection name="string-single-quoted">
            <zone name="string.quoted.single.cfm">
                <starts-with>
                    <expression>'</expression>
                </starts-with>
                <ends-with>
                    <expression>'</expression>
                </ends-with>
                <subzones>
                    <include collection="embedded-code"/>
                    <include collection="entities"/>
                </subzones>
            </zone>
        </collection>

        <!-- The stuff between the ## -->
		<collection name="coldfusion-script">
            <zone name="source.coldfusion.embedded.cfm">
                <starts-with>
                    <expression>#</expression>
                    <capture number="0" name="punctuation.definition.begin"/>
                </starts-with>
                <ends-with>
                    <expression>\#</expression>
                    <capture number="0" name="punctuation.definition.end"/>
                </ends-with>
                <subzones>
                    <include collection="embedded-code"/>
                    <include collection="entities"/>
                </subzones>
            </zone>
        </collection>
		
        <!-- collection name="tag-generic-attribute">
            <zone name="entity.other.attribute-name.cfm">
                <expression>\b([a-zA-Z\-:]+)</expression>
            </zone>
        </collection -->
        
        <!-- Tag attributes -->
        <collection name="tag-attributes">
            <zone>
                <expression>\s+([-_a-zA-Z0-9:]+)(=)</expression>
                <capture number="1" name="attribute-name">
					<subzones>
						<zone>
							<expression>([^:]+)(:)(.*)</expression>
							<capture number="1" name="namespace"/>
							<capture number="2" name="punctuation.separator"/>
							<capture number="3" name="localname"/>
						</zone>
					</subzones>
				</capture>
                <capture number="2" name="punctuation.separator.attribute"/>
                <capture number="3" name="punctuation.separator.namespace"/>
            </zone>
            <include collection="strings"/>
        </collection>
        
        <collection name="tag-id-attribute">
            <zone name="meta.attribute-with-value.id.cfm">
                <starts-with>
                    <expression>\b(id)\b\s*=</expression>
                    <capture number="1" name="entity.other.attribute-name.id.html"/>
                </starts-with>
                <ends-with>
                    <expression>(?&lt;='|")</expression>
                    <capture number="1" name="entity.other.attribute-name.id.html"/>
                </ends-with>
                <subzones>
                    <zone name="string.quoted.double.cfm">
                        <starts-with>
                            <expression>"</expression>
                        </starts-with>
                        <ends-with>
                            <expression>"</expression>
                        </ends-with>
                        <subzones name="meta.toc-list.id.cfm">
                            <include collection="embedded-code"/>
                            <include collection="entities"/>
                        </subzones>
                    </zone>
                    <zone name="string.quoted.single.cfm">
                        <starts-with>
                            <expression>'</expression>
                        </starts-with>
                        <ends-with>
                            <expression>'</expression>
                        </ends-with>
                        <subzones name="meta.toc-list.id.cfm">
                            <include collection="embedded-code"/>
                            <include collection="entities"/>
                        </subzones>
                    </zone>
                </subzones>
            </zone>
        </collection>
        
        <!-- CFML Functions -->
        <collection name="coldfusion-functions">
	        <zone name="support.function.cfm">
				<starts-with>
					<expression>\b(Abs|ACos|AddSOAPRequestHeader|AddSOAPResponseHeader|AjaxLink|AjaxOnLoad|ArrayAppend|ArrayAvg|ArrayClear|ArrayDeleteAt|ArrayInsertAt|ArrayIsDefined|ArrayIsEmpty|ArrayLen|ArrayMax|ArrayMin|ArraySet|ArraySort|ArrayNew|ArrayPrepend|ArrayResize|ArraySum|ArraySwap|ArrayToList|Asc|ASin|Atn|BinaryDecode|BinaryEncode|BitAnd|BitMaskClear|BitMaskRead|BitMaskSet|BitNot|BitOr|BitSHLN|BitSHRN|BitXor|Ceiling|CharsetDecode|CharsetEncode|Chr|CJustify|Compare|CompareNoCase|Cos|CreateDate|CreateDateTime|CreateObject|CreateODBCDate|CreateODBCDateTime|CreateODBCTime|CreateTime|CreateTimeSpan|CreateUUID|DateAdd|DateCompare|DateConvert|DateDiff|DateFormat|DatePart|Day|DayOfWeek|DayOfWeekAsString|DayOfYear|DaysInMonth|DaysInYear|DE|DecimalFormat|DecrementValue|Decrypt|DecryptBinary|DeleteClientVariable|DeserializeJSON|DirectoryExists|DollarFormat|DotNetToCFType|Duplicate|Encrypt|EncryptBinary|Evaluate|Exp|ExpandPath|FileClose|FileCopy|FileDelete|FileExists|FileIsEOF|FileMove|FileOpen|FileRead|FileReadBinary|FileReadLine|FileSetAccessMode|FileSetAttribute|FileSetLastModified|FileWrite|Find|FindNoCase|FindOneOf|FirstDayOfMonth|Fix|FormatBaseN|GenerateSecretKey|GetAuthUser|GetBaseTagData|GetBaseTagList|GetBaseTemplatePath|GetClientVariablesList|GetComponentMetaData|GetContextRoot|GetCurrentTemplatePath|GetDirectoryFromPath|GetEncoding|GetException|GetFileFromPath|GetFileInfo|GetFunctionList|GetGatewayHelper|GetHttpRequestData|GetHttpTimeString|GetK2ServerDocCount|GetK2ServerDocCountLimit|GetLocale|GetLocaleDisplayName|GetLocalHostIP|GetMetaData|GetMetricData|GetPageContext|GetPrinterInfo|GetProfileSections|GetProfileString|GetReadableImageFormats|GetSOAPRequest|GetSOAPRequestHeader|GetSOAPResponse|GetSOAPResponseHeader|GetTempDirectory|GetTempFile|GetTemplatePath|GetTickCount|GetTimeZoneInfo|GetToken|GetUserRoles|GetWriteableImageFormats|Hash|Hour|HTMLCodeFormat|HTMLEditFormat|IIf|ImageAddBorder|ImageBlur|ImageClearRect|ImageCopy|ImageCrop|ImageDrawArc|ImageDrawBeveledRect|ImageDrawCubicCurve|ImageDrawLine|ImageDrawLines|ImageDrawOval|ImageDrawPoint|ImageDrawQuadraticCurve|ImageDrawRect|ImageDrawRoundRect|ImageDrawText|ImageFlip|ImageGetBlob|ImageGetBufferedImage|ImageGetEXIFTag|ImageGetHeight|ImageGetIPTCTag|ImageGetWidth|ImageGrayscale|ImageInfo|ImageNegative|ImageNew|ImageOverlay|ImagePaste|ImageRead|ImageReadBase64|ImageResize|ImageRotate|ImageRotateDrawingAxis|ImageScaleToFit|ImageSetAntialiasing|ImageSetBackgroundColor|ImageSetDrawingColor|ImageSetDrawingStroke|ImageSetDrawingTransparency|ImageSharpen|ImageShear|ImageShearDrawingAxis|ImageTranslate|ImageTranslateDrawingAxis|ImageWrite|ImageWriteBase64|ImageXORDrawingMode|IncrementValue|InputBaseN|Insert|Int|IsArray|IsBinary|IsBoolean|IsCustomFunction|IsDate|IsDDX|IsDebugMode|IsDefined|IsImage|IsImageFile|IsInstanceOf|IsJSON|IsLeapYear|IsLocalHost|IsNumeric|IsNumericDate|IsObject|IsPDFFile|IsPDFObject|IsQuery|IsSimpleValue|IsSOAPRequest|IsStruct|IsUserInAnyRole|IsUserInRole|IsUserLoggedIn|IsValid|IsWDDX|IsXML|IsXmlAttribute|IsXmlDoc|IsXmlElem|IsXmlNode|IsXmlRoot|JavaCast|JSStringFormat|LCase|Left|Len|ListAppend|ListChangeDelims|ListContains|ListContainsNoCase|ListDeleteAt|ListFind|ListFindNoCase|ListFirst|ListGetAt|ListInsertAt|ListLast|ListLen|ListPrepend|ListQualify|ListRest|ListSetAt|ListSort|ListToArray|ListValueCount|ListValueCountNoCase|LJustify|Log|Log10|LSCurrencyFormat|LSDateFormat|LSEuroCurrencyFormat|LSIsCurrency|LSIsDate|LSIsNumeric|LSNumberFormat|LSParseCurrency|LSParseDateTime|LSParseEuroCurrency|LSParseNumber|LSTimeFormat|LTrim|Max|Mid|Min|Minute|Month|MonthAsString|Now|NumberFormat|ParagraphFormat|ParseDateTime|Pi|PrecisionEvaluate|PreserveSingleQuotes|Quarter|QueryAddColumn|QueryAddRow|QueryConvertForGrid|QueryNew|QuerySetCell|QuotedValueList|Rand|Randomize|RandRange|REFind|REFindNoCase|ReleaseComObject|REMatch|REMatchNoCase|RemoveChars|RepeatString|Replace|ReplaceList|ReplaceNoCase|REReplace|REReplaceNoCase|Reverse|Right|RJustify|Round|RTrim|Second|SendGatewayMessage|SerializeJSON|SetEncoding|SetLocale|SetProfileString|SetVariable|Sgn|Sin|Sleep|SpanExcluding|SpanIncluding|Sqr|StripCR|StructAppend|StructClear|StructCopy|StructCount|StructDelete|StructFind|StructFindKey|StructFindValue|StructGet|StructInsert|StructIsEmpty|StructKeyArray|StructKeyExists|StructKeyList|StructNew|StructSort|StructUpdate|Tan|TimeFormat|ToBase64|ToBinary|ToScript|ToString|Trim|UCase|URLDecode|URLEncodedFormat|URLSessionFormat|Val|ValueList|VerifyClient|Week|Wrap|WriteOutput|XmlChildPos|XmlElemNew|XmlFormat|XmlGetNodeType|XmlNew|XmlParse|XmlSearch|XmlTransform|XmlValidate|Year|YesNoFormat)\b(\()</expression>
					<capture number="1" name="method.name" />
					<capture number="2" name="delimiter.balanced.parenthesis.begin" />
				</starts-with>
				<ends-with>
					<expression>\)</expression>
					<capture number="0" name="delimiter.balanced.parenthesis.end" />
				</ends-with>
				<subzones>
					<include collection="tag-stuff" />
				</subzones>
			</zone>
		</collection>
        
        <!-- Other tag stuff -->
        <collection name="tag-stuff">
            <include collection="tag-id-attribute" />
            <include collection="tag-attributes" />
            <include collection="string-double-quoted" />
            <include collection="string-single-quoted" />
            <include collection="embedded-code" />
            <include collection="literal-keyword" />
            <include collection="coldfusion-operators" />
            <include collection="coldfusion-functions" />    
        </collection>      
            
    </library>
</syntax>